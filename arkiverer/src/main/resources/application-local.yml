---
spring:
  config:
    activate:
      on-profile: local

failedApplications: ""
application:
  SPRING_PROFILES_ACTIVE: test
  schema-registry-scope: mocked-scope
  KAFKA_SCHEMA_REGISTRY: mock://mocked-scope
  KAFKA_STREAMS_APPLICATION_ID: testApplicationId
  mocked-port-for-external-services: 2908
  BOOTSTRAPPING_TIMEOUT: 1
  DELAY_BEFORE_KAFKA_INITIALIZATION: 0
kafka:
  applicationId: ${application.KAFKA_STREAMS_APPLICATION_ID}
  brokers: localhost:29092
  bootstrappingTimeout: ${application.BOOTSTRAPPING_TIMEOUT}
  delayBeforeKafkaInitialization: ${application.DELAY_BEFORE_KAFKA_INITIALIZATION}
  security:
    enabled: FALSE
    protocol: SSL
    keyStoreType: PKCS12
    keyStorePath: dummy
    keyStorePassword: dummy
    trustStorePath: dummy
    trustStorePassword: dummy
  topics:
    mainTopic: privat-soknadinnsending-v1-dev
    processingTopic: privat-soknadinnsending-processingeventlog-v1-dev
    messageTopic: privat-soknadinnsending-messages-v1-dev
    arkiveringstilbakemeldingTopic: privat-soknadinnsending-arkiveringstilbakemeldinger-v1-dev
    metricsTopic: privat-soknadinnsending-metrics-v1-dev
    nologinSubmissionTopic: privat-soknadinnsending-nologin-submission-v1-dev
  schemaRegistry:
    url: ${application.KAFKA_SCHEMA_REGISTRY}
    username: dummy
    password: dummy
services:
  tasklist:
    scheduling:
      startUpSeconds: 8
      secondsBetweenRetries: [0,1,1,1,1,1]
joark:
  host: http://localhost:2908
  sendToJoark: true
  journal-post: /rest/journalpostapi/v1/journalpost
innsendingapi:
  host: http://localhost:2908
saf:
  url: http://localhost:2908
  path: /graphql
applicationName: "soknadsarkiverer"
status_log_url: "https://logs.adeo.no"

filefetchtimeouts:
  connectTimeout: 20
  callTimeout: 62
  readTimeout: 1
  writeTimeout: 1

archivingtimeouts:
  connectTimeout: 2
  readTimeout: 4
  exchangeTimeout: 4

no.nav.security:
  jwt:
    issuer:
      azuread:
        discovery-url: http://localhost:6969/azuread/.well-known/openid-configuration
        accepted-audience: azuread-client-id
    client:
      registration:
        innsendingApi:
          token-endpoint-url: http://localhost:6969/fake/token
          grant-type: client_credentials
          scope: ${INNSENDING_API_SCOPE}
          authentication:
            client-id: fake
            client-secret: someSecret
            client-auth-method: client_secret_basic
        arkiv:
          token-endpoint-url: http://localhost:6969/fake/token
          grant-type: client_credentials
          scope: ${DOKARKIV_SCOPE}
          authentication:
            client-id: fake
            client-secret: someSecret
            client-auth-method: client_secret_basic

        saf-maskintilmaskin:
          token-endpoint-url: http://localhost:6969/fake/token
          grant-type: client_credentials
          scope: ${SAF_SCOPE}
          authentication:
            client-id: fakr
            client-secret: someSecret
            client-auth-method: client_secret_basic
